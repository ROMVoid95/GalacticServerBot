plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'application'
	id 'org.ajoberstar.grgit' version '4.1.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "com.github.ben-manes.versions" version "0.42.0"
}

repositories {
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
}

ext {
	jdatools		= '4.0.0'
	reflections 	= '0.10.2'
	okhttp 			= '5.0.0-alpha.2'
	webhooks 		= '0.8.2'
    rethink 		= '2.4.4'
	commons			= '2.11.0'
}

dependencies {
    implementation "com.github.ReadOnlyDevelopment:JDATools:${jdatools}"
	implementation("org.reflections:reflections:${reflections}") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
	implementation("club.minnced:discord-webhooks:${webhooks}") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
	implementation("com.rethinkdb:rethinkdb-driver:${rethink}") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
	implementation("commons-io:commons-io:${commons}") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
    implementation 'org.codehaus.groovy:groovy-jsr223:3.0.12'
    
	implementation 'org.slf4j:slf4j-api:1.7.36'
	implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.apache.commons:commons-text:1.9'
	implementation 'io.github.matyrobbrt:curseforgeapi:1.7.3'
	implementation 'com.github.masecla22:Modrinth4J:master-SNAPSHOT'
	implementation 'org.jsoup:jsoup:1.15.2'
    
   	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

mainClassName = "com.readonlydev.GalacticBot"
group = 'com.readonlydev'
def ver = new Version(major: 0, minor: 1, revision: 0)
version ver.toString()
description = 'Discord Bot for the Galacticraft Central Server'
applicationName = 'galacticbot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

task sourcesForRelease(type: Copy) {
    from ('src/main/java') {
        include '**/GalacticBot.java'
        filter(ReplaceTokens, tokens: [
                version: ver.toString(),
                revision: grgit.head().abbreviatedId
        ])
    }
    into 'build/filteredSrc'

    includeEmptyDirs = false
}

task generateJavaSources(type: SourceTask) {
    def javaSources = sourceSets.main.allJava.filter {
        it.name != 'GalacticBot.java'
    }
    source = javaSources + sourcesForRelease.destinationDir

    dependsOn sourcesForRelease
}

compileJava {
    source = generateJavaSources.source
    classpath = sourceSets.main.compileClasspath

    dependsOn generateJavaSources
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.incremental = true
}

jar {
    classifier = 'lite'
}

shadowJar {
    archiveFileName = 'galacticbot.jar'
    classifier = ''
}

tasks.named('installShadowDist').configure {
    destinationDir = file('/opt/galacticbot2')
}

task copyConfigs(type: Copy) {
    from 'configs'
    into layout.buildDirectory.dir("/libs/configs")
}

task fullBuild {
    group 'jdatools'
    dependsOn 'clean'
    dependsOn 'build'
    tasks.findByName('build').mustRunAfter 'clean'
    doLast {
    	
    }
}

class Version {
    String major, minor, revision

    String toString() {
        "${major}.${minor}.${revision}"
    }
}

tasks.fullBuild.finalizedBy 'copyConfigs'
tasks.installShadowDist.finalizedBy 'copyConfigs'