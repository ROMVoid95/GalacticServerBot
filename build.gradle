plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'application'
    id 'io.freefair.lombok' version '6.6.1'
	id 'org.ajoberstar.grgit' version '4.1.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.github.ben-manes.versions' version '0.42.0'
}

repositories {
	mavenLocal()
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
}

ext {
	jdatools		= 'master-SNAPSHOT'
	reflections 	= '0.10.2'
	okhttp 			= '5.0.0-alpha.2'
	webhooks 		= '0.8.2'
    rethink 		= '2.4.4'
	commons			= '2.11.0'
	jsr223			= '3.0.12'
	commonsText		= '1.10.0'
	curseApi		= '1.7.3'
	modrinth4j		= 'master-SNAPSHOT'
	jda				= '5.0.0-beta.3'
	logback			= '1.2.11'
	slf4j			= '1.7.36'
}

dependencies {
    implementation group: 'com.github.ReadOnlyDevelopment', name: 'JDATools', 	version: jdatools

    implementation group: 'org.slf4j', 				name: 'slf4j-api', 			version: slf4j
    implementation group: 'ch.qos.logback', 		name: 'logback-classic', 	version: logback
	implementation group: 'club.minnced', 			name: 'discord-webhooks', 	version: webhooks
	implementation group: 'com.rethinkdb', 			name: 'rethinkdb-driver', 	version: rethink
	implementation group: 'commons-io', 			name: 'commons-io', 		version: commons
	implementation group: 'org.codehaus.groovy', 	name: 'groovy-jsr223', 		version: jsr223
	implementation group: 'org.apache.commons', 	name: 'commons-text', 		version: commonsText
	implementation group: 'io.github.matyrobbrt', 	name: 'curseforgeapi', 		version: curseApi
	implementation group: 'com.github.masecla22', 	name: 'Modrinth4J', 		version: modrinth4j
	implementation group: 'org.codehaus.groovy', 	name: 'groovy-jsr223', 		version: jsr223
	
	implementation("net.dv8tion:JDA:${jda}") {
        exclude module: 'opus-java'
    }
}

mainClassName = "io.github.romvoid95.GalacticBot"
group = 'io.github.romvoid95'
def ver = new Version(major: 0, minor: 1, revision: 0)
version ver.toString()
description = 'Discord Bot for the Galacticraft Central Server'
applicationName = 'galacticbot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

task sourcesForRelease(type: Copy) {
    from ('src/main/java') {
        include '**/GalacticBot.java'
        filter(ReplaceTokens, tokens: [
                version: ver.toString(),
                revision: grgit.head().abbreviatedId
        ])
    }
    into 'build/filteredSrc'

    includeEmptyDirs = false
}

task generateJavaSources(type: SourceTask) {
    def javaSources = sourceSets.main.allJava.filter {
        it.name != 'GalacticBot.java'
    }
    source = javaSources + sourcesForRelease.destinationDir

    dependsOn sourcesForRelease
}

compileJava {
    source = generateJavaSources.source
    classpath = sourceSets.main.compileClasspath

    dependsOn generateJavaSources
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.incremental = true
}

jar {
    classifier = 'lite'
}

shadowJar {
    archiveFileName = 'galacticbot.jar'
    classifier = ''
}

task fullBuild {
    group 'jdatools'
    dependsOn 'clean'
    dependsOn 'build'
    tasks.findByName('build').mustRunAfter 'clean'
    doLast {
    	
    }
}

class Version {
    String major, minor, revision

    String toString() {
        "${major}.${minor}.${revision}"
    }
}
